package com.genesis.config;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.core.Authentication;
import org.springframework.security.core.context.SecurityContextHolder;
import org.springframework.stereotype.Component;

import com.genesis.context.ApiRequestContext;
import com.genesis.dao.UserDao;
import com.softech.exception.UnAuthorizedRequestException;
import com.softech.model.ApiUser;

@Component
public class RequestContextBuilder {
	private static Logger _log = LoggerFactory.getLogger(RequestContextBuilder.class);

	@Autowired
	UserDao userDao;

	public ApiRequestContext buildRequestContext() {
		Authentication auth = SecurityContextHolder.getContext().getAuthentication();
		_log.info("auth: {}", auth);
		if (auth == null)
			throw new UnAuthorizedRequestException("No authentication found");
		ApiUser user = null;
		user = userDao.findByClientCode(auth.getName());
		_log.info("user: {}", user);

		ApiRequestContext context = new ApiRequestContext(user);
		return context;
	}

}
